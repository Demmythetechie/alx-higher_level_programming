The ``1-my_list`` module
========================

using ``MyList``
----------------

Importing ``MyList`` from the ``1-my_list`` module:

	>>> MyList = __import__('1-my_list').MyList

Case_01:

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

Case_02:

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(7.7)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5, 7.7]

Case_03:

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append('ls')
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	  File "/usr/lib/python3.8/doctest.py", line 1336, in __run
	    exec(compile(example.source, filename, "single",
	  File "<doctest 1-my_list.txt[23]>", line 1, in <module>
	    my_list.print_sorted()
	  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/1-my_list.py", line 18, in print_sorted
	    self = sorted(self)
	TypeError: '<' not supported between instances of 'str' and 'int'

Case_04:

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append([9, 7.2, 8.8])
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	  File "/usr/lib/python3.8/doctest.py", line 1336, in __run
	    exec(compile(example.source, filename, "single",
	  File "<doctest 1-my_list.txt[31]>", line 1, in <module>
	    my_list.print_sorted()
	  File "/home/vagrant/alx-higher_level_programming/0x0A-python-inheritance/1-my_list.py", line 18, in print_sorted
	    self = sorted(self)
	TypeError: '<' not supported between instances of 'list' and 'int'

Case_05:

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(2, 3, 8)
	Traceback (most recent call last):
	  File "/usr/lib/python3.8/doctest.py", line 1336, in __run
            exec(compile(example.source, filename, "single",
	  File "<doctest 1-my_list.txt[36]>", line 1, in <module>
	    my_list.append(2, 3, 8)
	TypeError: append() takes exactly one argument (3 given)
